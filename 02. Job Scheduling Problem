#include <algorithm>
#include <iostream>
using namespace std;

// A structure to represent a job
struct Job {
	char id;
	int dead;
	int profit;

};

bool comparison(Job a, Job b)
{
	return (a.profit > b.profit);
}

void printJobScheduling(Job arr[], int n)
{
	sort(arr, arr + n, comparison);

	int result[n];
	bool slot[n];

	for (int i = 0; i < n; i++)
		slot[i] = false;

    int profit = 0;
	for (int i = 0; i < n; i++) {

		for (int j = arr[i].dead - 1; j >= 0; j--) {

			if (slot[j] == false) {
				result[j] = i; // Add this job to result
				profit += arr[i].profit;
				slot[j] = true; // Make this slot occupied
				break;
			}
		}
	}

        cout<<profit;
}

// Driver code
int main()
{
	Job arr[] = { { 'a', 2, 100 },
				{ 'b', 1, 19 },
				{ 'c', 2, 27 },
				{ 'd', 1, 25 }};
	int n = sizeof(arr) / sizeof(arr[0]);

	// Function call
	printJobScheduling(arr, n);
	return 0;
}

// This code is contributed by Aditya Kumar (adityakumar129)
